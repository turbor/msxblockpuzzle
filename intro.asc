; MSX Block Puzzle game, released as entry for the MSXDev'20
; Created by David Heremans, aka turbor on mrc
;
; everything related to the intro screen, including difficulty selector
;
nextintrofont:
	ld a,(introfont)
	dec a
	jp p,nextintrofont2
	ld a,setbigfontdbend/8-setbigfontdb/8-1
nextintrofont2:
	ld (introfont),a
	call setbigfonttouse
	jp createbigcharset
	;ret

initintronametabledb:
	db #48,#36,#4B,#46
	db #43,#3D,#39,#39
	db #4D,#36,#50,#47
	db #3D,#3D,#57,#57
	db #4C,#4C,#4C,#4C
	db #4C,#3E,#3E,#49
	INCLUDE "logo.asc"
initintronametable:
	; make the intro screen nametabel, uses char from game itself!
	; {{{ 
	xor a
	ld (intromenuselect),a

	ld hl,nametabel
	ld de,nametabel+1
	ld ix,initintronametabledb
	ld b,24
initintronametable1:
	push bc
	ld a,(ix+0)
	inc ix
	ld (hl),a
	ld bc,31
	ldir
	pop bc
	inc de
	inc hl ; do not optimize bc to 32 or we oerwrite #C300!!!
	djnz initintronametable1
	; now copy logo to correct place
	ld hl,nametabel+8
	ld b,8
initintronametable2:
	push bc
	ld b,17
initintronametable3:
	ld a,(ix+0)
	inc ix
	or a
	jr z,initintronametable4
	ld (hl),a
initintronametable4:
	inc hl
	djnz initintronametable3
	ld de,32-17
	add hl,de
	pop bc
	djnz initintronametable2
	ld hl,initintronameplace
initintronametable5:
	ld e,(hl)
	inc hl
	ld d,(hl)
	ld a,e
	or d
	jr z,initintronametable6
	call initintronameblock
	jr initintronametable5
initintronametable6:
	; first make the scroll big charsset
	; it will place this in the 3 patgentabels so do this first we overwrite later
	call nextintrofont
	call createbigcharsetvram
	ld a,#fc
	ld hl,0x2000+256*8+128*8
	ld bc,128*8
	call FILVRM
	ld a,#f2
	ld hl,0x2000+512*8+128*8
	ld bc,128*8
	call FILVRM
	; add the new 125 and up chars
	ld hl,vrampatgameover
	ld de,141*8
	ld bc,vrampatgameoverend-vrampatgameover
	call LDIRVM	; copy patern table
	ld hl,vrampatgameover
	ld de,125*8
	ld bc,vrampatgameoverend-vrampatgameover
	call LDIRVM	; copy patern table
	ld a,#94
	ld hl,0x2000+125*8
	ld bc,vramcolgameoverend-vramcolgameover
	call FILVRM
	ld a,#95
	ld hl,0x2000+#90*8
	ld bc,vramcolgameoverend-vramcolgameover
	call FILVRM
	; add new characters for the 'start game' and hiscore text
scr1charstart:	equ 88
	ld hl,screen1chardb
	ld de,scr1charstart*8+256*8
	ld bc,128*8-scr1charstart*8
	;ld bc,screen1chardbend-screen1chardb
	;ld bc,75*8
	call LDIRVM
	ld hl,screen1chardb
	ld de,scr1charstart*8+512*8
	ld bc,128*8-scr1charstart*8
	;ld bc,screen1chardbend-screen1chardb
	;ld bc,75*8
	call LDIRVM
	ld a,#F7
	ld hl,0x2000+256*8+scr1charstart*8
	ld bc,128*8-scr1charstart*8
	;ld bc,screen1chardbend-screen1chardb
	call FILVRM
	ld a,#F3
	ld hl,0x2000+512*8+scr1charstart*8
	ld bc,128*8-scr1charstart*8
	;ld bc,screen1chardbend-screen1chardb
	call FILVRM

	ld hl,startgamedb
	ld de,nametabel+32*10+11
	ld bc,10
	ldir
	ld hl,startgamedb2
	ld de,nametabel+32*12+11
	ld bc,10
	ldir
	ld hl,startgamedb3
	ld de,nametabel+32*23+10
	ld bc,8
	ldir

	; show current hi-score
	ld hl,hiscore+1
	ld de,#1800+32*23+10+8+1 ; vram destination
	ld ix,nametabel+32*23+10+8+1
	ld bc,256*scr1charstart+#00 ; offset for numbers in b, empty char in c
	call shownumbers

	; prepare scroller
	ld de,30
	ld (scrollbuflength),de
	ld de,nametabel+14*32
	ld (scrollbufpnt),de
	ld de,bigscrolchr2vram2tabels
	ld (bigscrolchr2vrampnt),de
	call savefgblocks
	ld de,switchfgblocks
	;ld de,showgameoverret
	ld (bigscrolswitchfgpnt),de
	xor a
	ld (scrollpage),a
	ld hl,scrollpatternendbuf
	ld de,scrollpatternendbuf+1
	ld bc,15
	ld (hl),a
	ldir
	dec a
	ld (scrollpatterncombinedb),a
	xor a
	ld (scrolltextcount),a
	;ld a,2
	inc a
	ld (scrolltextmaxcount),a


	; now show intro screen on screen
	ld hl,nametabel
	ld de,#1800
	ld bc,32*24
	call LDIRVM 

	; small sprites but 16x16
	ld a,(RG1SAV)
	and 252
	or 2
	ld (RG1SAV),a
	ld b,a
	ld c,1
	call WRTVDP

	ld a,80
	call introhandcode6

	ld de,20*256+200
	ld bc,sprbirdoffset
	call setbird
	ret

startgamedb:
	db "D"-#30+scr1charstart-7
	db "I"-#30+scr1charstart-7
	db "F"-#30+scr1charstart-7
	db "F"-#30+scr1charstart-7
	db "I"-#30+scr1charstart-7
	db "C"-#30+scr1charstart-7
	db "U"-#30+scr1charstart-7
	db "L"-#30+scr1charstart-7
	db "T"-#30+scr1charstart-7
	db "Y"-#30+scr1charstart-7

startgamedb2:
	db "S"-#30+scr1charstart-7
	db "T"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db "T"-#30+scr1charstart-7
	db " "-#30+scr1charstart-7
	db "G"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "M"-#30+scr1charstart-7
	db "E"-#30+scr1charstart-7

startgamedb3:
	db "H"-#30+scr1charstart-7
	db "I"-#30+scr1charstart-7
	db #49
	db "S"-#30+scr1charstart-7
	db "C"-#30+scr1charstart-7
	db "O"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db "E"-#30+scr1charstart-7

initintronameplace:
	dw nametabel+32*13+29
	dw nametabel+32*13+31
	dw nametabel+32*15+30
	dw nametabel+32*17+31
	dw nametabel+32*17+29
	dw nametabel+32*17+27
	dw nametabel+32*19+30
	dw nametabel+32*19+26
	dw nametabel+32*19+24
	dw nametabel+32*20+0
	dw nametabel+32*20+2
	dw nametabel+32*20+19
	dw nametabel+32*20+23
	dw nametabel+32*20+25
	dw nametabel+32*22+1
	dw nametabel+32*22+3
	dw nametabel+32*22+29
	dw 0
initintronameblock:
	push de
	pop ix
	ld a,12
	ld (ix+0),a
	inc a
	ld (ix+1),a
	inc a
	ld (ix+32),a
	inc a
	ld (ix+33),a
	ret
	; }}}

introhandcodeinit:
	ld de,introhandcode
	call addroutine
	ret

makedebugenabled:
	ld a,(NEWKEY+7)
	and 4
	ret nz
	inc a
	ld (debugmode),a
	call PSGReplayMute
	jp startsfx6
	;ret

introhandcode:
	call makedebugenabled
	ld a,(debugmode)
	or a
	jr z,introhandcode09
;	; first F1 next font

	ld a,(oldnewkey+6)
	ld b,a
	ld a,(NEWKEY+6)
	xor b
	and b
	and 32
	jr z,introhandcode09

;	bit 5,a
;	jr z,introhandcode00
;	bit 6,a
;	jr z,introhandcode01
;	bit 7,a
;	jr z,introhandcode02
;	ld a,(NEWKEY+7)
;	bit 0,a
;	jr z,introhandcode03
;	bit 1,a
;	jr z,introhandcode04
;	bit 2,a
;	jr z,introhandcode05
;	jr introhandcode09
;introhandcode05
;	inc b
;introhandcode04
;	inc b
;introhandcode03
;	inc b
;introhandcode02
;	inc b
;introhandcode01
;	inc b
;introhandcode00
	call nextintrofont
	ld hl,scrollpatterncombinedb
	ld de,scrollpatterncombinedb+20
	ld bc,63*20
	ld a,255
	ld (hl),a
	ldir
introhandcode09:
	ld a,(NEWKEY+6)
	ld (oldnewkey+6),a

	call getjoystick
	ld b,a
	ld a,(prevjoystick)
	ld c,a
	ld a,b
	ld (prevjoystick),a
	xor c
	and c
	bit 0,a
	jr z,introhandcode2
	xor a
	ld (intromenuselect),a
	ld a,80
	jp introhandcode6
introhandcode2:
	bit 1,a
	jr z,introhandcode3
	ld a,1
	ld (intromenuselect),a
	ld a,96
	jp introhandcode6
introhandcode3:
	bit 4,a
	ret z
	;fire pressed once
	ld a,(intromenuselect)
	or a
	jp nz,introhandcode5
	; change hardmode selected
	ld a,(introdifficultselected)
	inc a
	cp 6
	jr c,introhandcode4
	xor a
introhandcode4:
	ld (introdifficultselected),a
	; now display text
	add a,a
	ld e,a
	ld d,0
	ld hl,hardmodetextpnt
	add  hl,de
	ld e,(hl)
	inc hl
	ld d,(hl)
	ex de,hl
	ld de,nametabel+32*10+11
	ld bc,13
	ldir
	ld hl,nametabel+32*10
	ld de,#1800+32*10
	ld bc,32
	call LDIRVM
	; now update the piecerandomdistribution
setrandomdistribution:
	ld a,(introdifficultselected)
	add a,a
	ld l,a
	ld h,0
	ld de,hardmodedbpnt
	add hl,de
	ld e,(hl)
	inc hl
	ld d,(hl)
	ld hl,piecerandomdistribution
	xor a
	ld c,a
intropiecerandom:
	ld a,(de)
	or a
	ret z
	inc de
	ld b,a
intropiecerandom3:
	ld (hl),c
	inc hl
	djnz intropiecerandom3
	inc c
	jp intropiecerandom

hardmodedbpnt	dw hardmodedb1
	dw hardmodedb2
	dw hardmodedb3
	dw hardmodedb1
	dw hardmodedb2
	dw hardmodedb3
hardmodedb1:
	db 14,20,20,20
	db 20,20,14,14
	db 14,13,13,13
	db 13,13, 7, 7
	db  7, 7, 7
	db 0
hardmodedb2:
	db 14,14,14,14
	db 14,14,14,14
	db 14,13,13,13
	db 13,13,13,13
	db 13,13,13
	db 0
hardmodedb3:
	db 13,12,12,13
	db 13,13,13,13
	db 13,13,14,14
	db 14,14,14,14
	db 14,15,15
	db 0

hardmodetextpnt	dw hardmodetext1
	dw hardmodetext2
	dw hardmodetext3
	dw hardmodetext4
	dw hardmodetext5
	dw hardmodetext6
hardmodetext1
	db "E"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "S"-#30+scr1charstart-7
	db "Y"-#30+scr1charstart-7
	db #50
	db "G"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "M"-#30+scr1charstart-7
	db "E"-#30+scr1charstart-7
	db #50
	db #50
	db #50
	db #50
hardmodetext2
	db "N"-#30+scr1charstart-7
	db "O"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db "M"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "L"-#30+scr1charstart-7
	db #50
	db "G"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "M"-#30+scr1charstart-7
	db "E"-#30+scr1charstart-7
	db #50
	db #50
hardmodetext3
	db "H"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db "D"-#30+scr1charstart-7
	db #50
	db "G"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "M"-#30+scr1charstart-7
	db "E"-#30+scr1charstart-7
	db #50
	db #50
	db #50
	db #50
hardmodetext4
	db "F"-#30+scr1charstart-7
	db "O"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db #50
	db "N"-#30+scr1charstart-7
	db "E"-#30+scr1charstart-7
	db "W"-#30+scr1charstart-7
	db "B"-#30+scr1charstart-7
	db "O"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db "N"-#30+scr1charstart-7
	db "S"-#30+scr1charstart-7
	db #50
hardmodetext5
	db "F"-#30+scr1charstart-7
	db "O"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db #50
	db "I"-#30+scr1charstart-7
	db "N"-#30+scr1charstart-7
	db "F"-#30+scr1charstart-7
	db "A"-#30+scr1charstart-7
	db "N"-#30+scr1charstart-7
	db "T"-#30+scr1charstart-7
	db "S"-#30+scr1charstart-7
	db #50
	db #50
hardmodetext6
	db "F"-#30+scr1charstart-7
	db "O"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db #50
	db "T"-#30+scr1charstart-7
	db "O"-#30+scr1charstart-7
	db "D"-#30+scr1charstart-7
	db "D"-#30+scr1charstart-7
	db "L"-#30+scr1charstart-7
	db "E"-#30+scr1charstart-7
	db "R"-#30+scr1charstart-7
	db "S"-#30+scr1charstart-7
	db #50


introhandcode5:
	; start game selected
	ld (waitinterrupted),a ; stop scrolling is start of game

	ld a,255	; do not start ai_player flag
	ld (intromenuselect),a
	ret
	

introhandcode6:
	; hand code is spriteattr 3 (0,1,2used for letters)
	ld (spriteatrtabel+4*3),a
	ld (spriteatrtabel+4*4),a
	ld (spriteatrtabel+4*5),a
	ld a,60
	ld (spriteatrtabel+4*3+1),a
	ld (spriteatrtabel+4*4+1),a
	ld (spriteatrtabel+4*5+1),a
	ld a,192
	ld (spriteatrtabel+4*3+2),a
	ld a,196
	ld (spriteatrtabel+4*4+2),a
	ld a,200
	ld (spriteatrtabel+4*5+2),a
	ld a,1
	ld (spriteatrtabel+4*3+3),a
	ld a,14
	ld (spriteatrtabel+4*4+3),a
	ld a,15
	ld (spriteatrtabel+4*5+3),a
	jp transferspriteatrtabel

;	vim:foldmethod=marker:ft=z8a:ts=16
